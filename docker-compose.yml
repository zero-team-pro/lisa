version: '3.9'

services:
  gateway:
    container_name: 'lisa-gateway'
    build: ./bot
    image: registry.zero-team.pro/lisa/bot:${TAG-latest}
    restart: always
    env_file: .env
    command: 'yarn run start-gateway'
    networks:
      - default
      - caddy
    volumes:
      - './.env:/app/.env:ro'
      - '${DATA_MOUNT_PATH}/certs/:/certs:ro'
    environment:
      - SHARD_COUNT=2
      - DB_FORCE=${DB_FORCE}
    depends_on:
      - 'db'
      - 'redis'

  bot-shard-0:
    container_name: 'lisa-bot-shard-0'
    image: registry.zero-team.pro/lisa/bot:${TAG-latest}
    restart: always
    env_file: .env
    command: 'yarn run start-cluster'
    volumes:
      - './.env:/app/.env:ro'
      - '${DATA_MOUNT_PATH}/certs/:/certs:ro'
    environment:
      - SHARD_ID=0
      - SHARD_COUNT=2
    depends_on:
      - 'db'
      - 'redis'

  bot-shard-1:
    container_name: 'lisa-bot-shard-1'
    image: registry.zero-team.pro/lisa/bot:${TAG-latest}
    restart: always
    env_file: .env
    command: 'yarn run start-cluster'
    volumes:
      - './.env:/app/.env:ro'
      - '${DATA_MOUNT_PATH}/certs/:/certs:ro'
    environment:
      - SHARD_ID=1
      - SHARD_COUNT=2
    depends_on:
      - 'db'
      - 'redis'

  telegram:
    container_name: 'lisa-telegram'
    image: registry.zero-team.pro/lisa/bot:${TAG-latest}
    restart: always
    env_file: .env
    command: 'yarn run start-telegram'
    profiles: ['telegram']
    networks:
      - default
      - caddy
    volumes:
      - './.env:/app/.env:ro'
      - '${DATA_MOUNT_PATH}/certs/:/certs:ro'
    depends_on:
      - 'db'
      - 'redis'

  vm-1:
    container_name: 'lisa-vm-1'
    image: registry.zero-team.pro/lisa/bot:${TAG-latest}
    restart: always
    env_file: .env
    command: 'yarn run start-vm'
    profiles: ['vm']
    volumes:
      - './.env:/app/.env:ro'
      - '${DATA_MOUNT_PATH}/certs/:/certs:ro'
      - '${DATA_MOUNT_PATH}/vm/:/data'
      - '/var/run/docker.sock:/var/run/docker.sock'
    environment:
      - API_HOST=gateway
    depends_on:
      - 'db'
      - 'redis'
      - 'gateway'

  # DEPRECATED
  # rater:
  #   container_name: 'lisa-rater'
  #   build: ./rater
  #   image: registry.zero-team.pro/lisa/rater:${TAG-latest}
  #   restart: always
  #   env_file: .env
  #   profiles: ['rater']
  #   volumes:
  #     - './.env:/app/.env:ro'

  db:
    container_name: 'lisa-postgresql'
    build: ./db
    image: registry.zero-team.pro/lisa/db:${TAG-latest}
    restart: always
    env_file: .env
    user: ${POSTGRES_UGID}
    ports:
      - '9302:5432'
    volumes:
      - '${DATA_MOUNT_PATH}/postgres/:/var/lib/postgresql/data/'

  redis:
    container_name: 'lisa-redis'
    image: zeroteampro/redis:v7.0.12
    restart: always
    env_file: .env
    ports:
      - '9343:6379'
    volumes:
      - '${DATA_MOUNT_PATH}/certs/redis/:/certs'
      - '${DATA_MOUNT_PATH}/redis/:/data'
    environment:
      - REDIS_MAX_MEMORY=256mb
      - REDIS_TLS_GEN=true
      - REDIS_TLS_ON=true

  postgres-exporter:
    container_name: 'lisa-postgres-exporter'
    build: ./devops/postgres-exporter
    image: registry.zero-team.pro/lisa/postgres-exporter:${TAG-latest}
    restart: always
    env_file: .env
    profiles: ['monitor']
    ports:
      - '19187:9187'
    depends_on:
      - db

  admin:
    container_name: 'lisa-admin'
    build:
      context: ./admin
      args:
        VITE_APP_API_HOST: ${API_HOST}
        VITE_APP_API_HOST_LE: ${API_HOST_LE}
    image: registry.zero-team.pro/lisa/admin:${TAG-latest}
    restart: always
    env_file: .env
    profiles: ['admin']
    networks:
      - default
      - caddy
    volumes:
      - './admin/test/screenshots:/app/test/screenshots'
    depends_on:
      - 'gateway'

networks:
  default:
    name: lisa
  caddy:
    name: caddy
    external: true
